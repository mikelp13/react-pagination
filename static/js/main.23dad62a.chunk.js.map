{"version":3,"sources":["hooks/usePaginationButtons.js","components/Pagination.js","components/Posts.js","api/fetchPosts.js","components/App.js","index.js"],"names":["usePaginationButtons","numberOfPages","setCurrentPage","useState","currentButton","setCurrentButton","arrOfCurrButtons","setArrOfCurrButtons","useEffect","tempNumberOfPages","dotsInitial","dotsLeft","dotsRight","length","sliced","slice","sliced1","sliced2","Pagination","pages","i","push","className","type","onClick","prev","map","item","index","Posts","posts","idx","title","body","postsApi","fetchPosts","axios","get","App","setPosts","currentPage","postsPerPage","loading","setLoading","setError","postsAPI","then","data","catch","error","finally","getCurrentPosts","indexOfLastPost","indexOfFirstPost","currentPosts","Math","ceil","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23dad62a.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst usePaginationButtons = (numberOfPages, setCurrentPage) => {\r\n  // Current active button number\r\n  const [currentButton, setCurrentButton] = useState(1);\r\n  // Array of buttons what we see on the page\r\n  const [arrOfCurrButtons, setArrOfCurrButtons] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let tempNumberOfPages = [...arrOfCurrButtons];\r\n\r\n    let dotsInitial = \"...\";\r\n    let dotsLeft = \"... \";\r\n    let dotsRight = \" ...\";\r\n\r\n    if (numberOfPages.length < 6) {\r\n      tempNumberOfPages = numberOfPages;\r\n    } else if (currentButton >= 1 && currentButton <= 3) {\r\n      tempNumberOfPages = [1, 2, 3, 4, dotsInitial, numberOfPages.length];\r\n    } else if (currentButton === 4) {\r\n      const sliced = numberOfPages.slice(0, 5);\r\n      tempNumberOfPages = [...sliced, dotsInitial, numberOfPages.length];\r\n    } else if (currentButton > 4 && currentButton < numberOfPages.length - 2) {\r\n      // from 5 to 8 -> (10 - 2)\r\n      const sliced1 = numberOfPages.slice(currentButton - 2, currentButton); // sliced1 (5-2, 5) -> [4,5]\r\n      const sliced2 = numberOfPages.slice(currentButton, currentButton + 1); // sliced1 (5, 5+1) -> [6]\r\n      tempNumberOfPages = [\r\n        1,\r\n        dotsLeft,\r\n        ...sliced1,\r\n        ...sliced2,\r\n        dotsRight,\r\n        numberOfPages.length,\r\n      ]; // [1, '...', 4, 5, 6, '...', 10]\r\n    } else if (currentButton > numberOfPages.length - 3) {\r\n      // > 7\r\n      const sliced = numberOfPages.slice(numberOfPages.length - 4); // slice(10-4)\r\n      tempNumberOfPages = [1, dotsLeft, ...sliced];\r\n    } else if (currentButton === dotsInitial) {\r\n      // [1, 2, 3, 4, \"...\", 10].length = 6 - 3  = 3\r\n      // arrOfCurrButtons[3] = 4 + 1 = 5\r\n      // or\r\n      // [1, 2, 3, 4, 5, \"...\", 10].length = 7 - 3 = 4\r\n      // [1, 2, 3, 4, 5, \"...\", 10][4] = 5 + 1 = 6\r\n      setCurrentButton(arrOfCurrButtons[arrOfCurrButtons.length - 3] + 1);\r\n    } else if (currentButton === dotsRight) {\r\n      setCurrentButton(arrOfCurrButtons[3] + 2);\r\n    } else if (currentButton === dotsLeft) {\r\n      setCurrentButton(arrOfCurrButtons[3] - 2);\r\n    }\r\n    setArrOfCurrButtons(tempNumberOfPages);\r\n    setCurrentPage(currentButton);\r\n    // eslint-disable-next-line\r\n  }, [currentButton]);\r\n\r\n  return [arrOfCurrButtons, currentButton, setCurrentButton];\r\n};\r\n\r\nexport default usePaginationButtons;\r\n","import React from \"react\";\r\nimport usePaginationButtons from \"../hooks/usePaginationButtons\";\r\n\r\nfunction Pagination({ pages = 10, setCurrentPage }) {\r\n  //Set number of pages\r\n  const numberOfPages = [];\r\n  for (let i = 1; i <= pages; i++) {\r\n    numberOfPages.push(i);\r\n  }\r\n  const [\r\n    arrOfCurrButtons,\r\n    currentButton,\r\n    setCurrentButton,\r\n  ] = usePaginationButtons(numberOfPages, setCurrentPage);\r\n\r\n  return (\r\n    <div className=\"pagination-container\">\r\n      <button\r\n        type=\"button\"\r\n        className={`${currentButton === 1 ? \"disabled\" : \"\"}`}\r\n        onClick={() =>\r\n          setCurrentButton((prev) => (prev <= 1 ? prev : prev - 1))\r\n        }\r\n      >\r\n        Prev\r\n      </button>\r\n\r\n      {arrOfCurrButtons.map((item, index) => {\r\n        return (\r\n          <button\r\n            type=\"button\"\r\n            key={index}\r\n            className={`${currentButton === item ? \"active\" : \"\"}`}\r\n            onClick={() => setCurrentButton(item)}\r\n          >\r\n            {item}\r\n          </button>\r\n        );\r\n      })}\r\n\r\n      <button\r\n        type=\"button\"\r\n        className={`${\r\n          currentButton === numberOfPages.length ? \"disabled\" : \"\"\r\n        }`}\r\n        onClick={() =>\r\n          setCurrentButton((prev) =>\r\n            prev >= numberOfPages.length ? prev : prev + 1\r\n          )\r\n        }\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst Posts = ({ posts }) => {\r\n  return (\r\n    <ul className=\"list-group my-4\">\r\n      {posts.map(({ title, body }, idx) => (\r\n        <li key={idx} className=\"list-group-item\">\r\n          <p className=\"h4\">{title}</p>\r\n          <p className=\"lead\">{body}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import axios from \"axios\";\r\n\r\nconst fetchPosts = () => {\r\n  return axios.get(\"https://jsonplaceholder.typicode.com/posts\");\r\n};\r\n\r\nconst postsApi = {\r\n  fetchPosts,\r\n};\r\nexport default postsApi;\r\n","import React, { useState, useEffect } from \"react\";\nimport Pagination from \"./Pagination\";\nimport Posts from \"./Posts\";\nimport postsAPI from \"../api/fetchPosts\";\nimport \"../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const [loading, setLoading] = useState(false);\n  // eslint-disable-next-line\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    postsAPI\n      .fetchPosts()\n      .then((posts) => {\n        setPosts([...posts.data]);\n      })\n      .catch((error) => setError({ error }))\n      .finally(() => setLoading(false));\n  }, []);\n\n  if (loading && posts.length === 0) {\n    return <h2>Loading...</h2>;\n  }\n\n  const getCurrentPosts = () => {\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n    const numberOfPages = Math.ceil(posts.length / postsPerPage);\n    return { currentPosts, numberOfPages };\n  };\n\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-primary mb-3\">My Blog</h1>\n      <Posts posts={getCurrentPosts().currentPosts} />\n      <Pagination\n        pages={getCurrentPosts().numberOfPages}\n        setCurrentPage={setCurrentPage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './App.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}